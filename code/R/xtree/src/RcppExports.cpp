// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// xtree
void xtree(Rcpp::DataFrame r_data, int target_index, Rcpp::StringVector coltypes, Rcpp::List categ_encodings, Rcpp::StringVector params);
RcppExport SEXP _xtree_xtree(SEXP r_dataSEXP, SEXP target_indexSEXP, SEXP coltypesSEXP, SEXP categ_encodingsSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type r_data(r_dataSEXP);
    Rcpp::traits::input_parameter< int >::type target_index(target_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type coltypes(coltypesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type categ_encodings(categ_encodingsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type params(paramsSEXP);
    xtree(r_data, target_index, coltypes, categ_encodings, params);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xtree_xtree", (DL_FUNC) &_xtree_xtree, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_xtree(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
